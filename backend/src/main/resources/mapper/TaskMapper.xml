<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.wooreal.gravitygather.mapper.TaskMapper">

    <select id="getTasks">
        SELECT DISTINCT
            A.SEQ,
            A.TITLE,
            A.CATEGORY_SEQ,
            (select AA. CATEGORY_NM from task_category AA where AA.seq = A.CATEGORY_SEQ) as CATEGORY_NM,
            A.CONTENT,
            A.IS_ALL_DAY,
            A.is_delete,
            A.user_seq,
            (select AA.nickname from users AA where AA.seq = A.user_seq) as user_nickname,
            A.BG_COLOR,
            A.TEXT_COLOR,
            A.START_DATE,
            A.END_DATE,
            A.START_TIME,
            A.END_TIME,
            UNIX_TIMESTAMP(CONCAT(A.START_DATE, ' ', IFNULL(A.START_TIME, '00:00:00'))) AS start_date_time,
            CASE
                WHEN A.END_DATE IS NULL AND A.END_TIME IS NULL THEN NULL
                ELSE UNIX_TIMESTAMP(CONCAT(IFNULL(A.END_DATE, A.START_DATE), ' ', IFNULL(A.END_TIME, '23:59:59')))
            END AS end_date_time,
            A.CREATED_AT,
            A.UPDATED_AT,
            B.SHARE_DATE,
            B.CAPTION
        from tasks A
        left join task_share B
        on A.SEQ = B.TASK_SEQ
        where
            (A.user_seq = #{user_seq} or B.user_seq = #{user_seq})
            and A.is_delete = false
            <if test="startDatetime != null">
                and	UNIX_TIMESTAMP(CONCAT(A.start_date, ' ', IFNULL(A.start_time, '00:00:00'))) <![CDATA[>=]]> #{startDatetime}
            </if>
            <if test="endDatetime != null">
                and UNIX_TIMESTAMP(CONCAT(IFNULL(A.end_date, A.start_date), ' ', IFNULL(A.end_time, '23:59:59'))) <![CDATA[<]]> #{endDatetime}
            </if>
            <if test="category_seq != null">
                and A.CATEGORY_SEQ = #{category_seq}
            </if>
        order by A.seq
    </select>

    <select id="getCategories">
        SELECT
            seq,
            category_nm,
            user_seq,
            is_delete,
            task_order,
            create_at,
            updated_at
        FROM
            TASK_CATEGORY
        WHERE
            user_seq = #{user_seq}
        AND is_delete = false
        ORDER BY
            task_order
    </select>

    <insert id="addCategory">
        INSERT INTO TASK_CATEGORY(
            category_nm,
            user_seq,
            task_order
        ) VALUES (
            '새로운 카테고리',
            #{user_seq},
            (ifnull((select MAX(A.task_order) + 1 from task_category A where A.user_seq = #{user_seq}), 1))
        )
    </insert>

    <insert id="addTask">
        INSERT INTO TASKS(
            TITLE,
            CATEGORY_SEQ,
            CONTENT,
            IS_ALL_DAY,
            IS_DELETE,
            USER_SEQ,
            BG_COLOR,
            TEXT_COLOR,
            START_DATE,
            END_DATE,
            START_TIME,
            END_TIME,
            CREATED_AT,
            UPDATED_AT
        ) VALUES (
            #{title},
            #{category_seq},
            #{content},
            #{is_all_day},
            false,
            #{user_seq},
            #{bg_color},
            #{text_color},
            FROM_UNIXTIME(#{start_date_time}),
            FROM_UNIXTIME(#{end_date_time}),
            FROM_UNIXTIME(#{start_date_time}),
            FROM_UNIXTIME(#{end_date_time}),
            now(),
            now()
        )
        <selectKey keyProperty="seq" resultType="Integer" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="addTaskShare">
        INSERT INTO TASK_SHARE(
            TASK_SEQ,
            USER_SEQ,
            SHARE_DATE,
            CAPTION
        ) VALUES
        <foreach item="item" index="index" collection="shared_user_seq" separator=",">
            (
                 #{seq},
                 #{item},
                 now(),
                 #{caption}
            )
        </foreach>
    </insert>

    <update id="updateTask">
        UPDATE tasks SET
            TITLE = #{title},
            CONTENT = #{content},
            IS_ALL_DAY = #{is_all_day},
            IS_DELETE = #{is_delete},
            BG_COLOR = #{bg_color},
            TEXT_COLOR = #{text_color},
            START_DATE = FROM_UNIXTIME(#{start_date_time}),
            END_DATE = FROM_UNIXTIME(#{end_date_time}),
            START_TIME = FROM_UNIXTIME(#{start_date_time}),
            END_TIME = FROM_UNIXTIME(#{end_date_time}),
            UPDATED_AT = now()
        WHERE
            SEQ = #{seq}
    </update>

    <update id="updateCategory">
        UPDATE task_category
        <set>
            <if test="category_nm != null">
                category_nm = #{category_nm},
            </if>
            <if test="is_delete != null">
                is_delete = #{is_delete},
            </if>
            updated_at = now()
        </set>
        WHERE seq = #{seq}
    </update>

    <update id="updateCategoryOrder">
        UPDATE task_category
        SET task_order = CASE seq
        <foreach collection="seqs" item="seq" index="index">
            WHEN #{seq} THEN ${index + 1}
        </foreach>
        ELSE task_order
        END
    </update>

</mapper>
